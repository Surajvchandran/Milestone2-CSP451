{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "Name for the Virtual Machine"
        }
      },
      "dnsNameForPublicIP": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine administrator"
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine"
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "Size of the VM"
        }
      },
      "ubuntuOSVersion": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "allowedValues": [
          "18.04-LTS",
          "20.04-LTS",
          "22.04-LTS"
        ],
        "metadata": {
          "description": "The Ubuntu version for the VM."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "allowedSSHSourceIP": {
        "type": "string",
        "defaultValue": "*",
        "metadata": {
          "description": "Source IP address or range allowed for SSH access. For better security, specify your specific IP address."
        }
      }
    },
    "variables": {
      "vnetName": "[concat(parameters('vmName'), '-vnet')]",
      "subnetName": "default",
      "networkSecurityGroupName": "[concat(parameters('vmName'), '-nsg')]",
      "publicIPAddressName": "[concat(parameters('vmName'), '-pip')]",
      "nicName": "[concat(parameters('vmName'), '-nic')]",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
      "osDiskType": "Standard_LRS",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2021-02-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "comments": "Network Security Group to control inbound and outbound traffic",
        "properties": {
          "securityRules": [
            {
              "name": "AllowHTTP",
              "properties": {
                "priority": 1000,
                "protocol": "Tcp",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "80"
              }
            },
            {
              "name": "AllowHTTPS",
              "properties": {
                "priority": 1001,
                "protocol": "Tcp",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "443"
              }
            },
            {
              "name": "AllowSSH",
              "properties": {
                "priority": 1002,
                "protocol": "Tcp",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('allowedSSHSourceIP')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2021-02-01",
        "name": "[variables('vnetName')]",
        "location": "[parameters('location')]",
        "comments": "Virtual Network with subnet for the web server",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ]
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2021-02-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "comments": "Public IP address for accessing the web server",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2021-02-01",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "comments": "Network interface connecting the VM to the subnet",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-03-01",
        "name": "[parameters('vmName')]",
        "location": "[parameters('location')]",
        "comments": "Web server virtual machine",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2021-03-01",
        "name": "[concat(parameters('vmName'), '/InstallWebServer')]",
        "location": "[parameters('location')]",
        "comments": "Custom Script Extension to install and configure the web server",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.1",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
            ],
            "commandToExecute": "apt-get update && apt-get install -y nginx && systemctl enable nginx && systemctl start nginx && echo '<html><body><h1>Web Server Deployed Successfully!</h1><p>This web server was deployed using an ARM template.</p></body></html>' > /var/www/html/index.html"
          },
          "protectedSettings": {}
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      },
      "webUrl": {
        "type": "string",
        "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    }
  }